TextBlock/ TextGeometry could have no concept of render target? allow draw to screen or ui block?
would this allow ui_block to be more generic, holds the render target and some compisition info, that is the pixel size

ui_hierarchy
i_ui_hierarchy_node
    ui_hierarchy_node_text
        ui_block
    ui_hierarchy_node_fill
    ui_hierarchy_node_drop_shadow
    ?ui_hierarchy_node_margin
    ?auto scroll
    ?interactive scroll
    ?stack
    ?grid


UiBlock rename as UiRenderTarget, is a render target, with size
UiDraw is a pair of geometry and texture to get drawn
what about canvas? 
UiCanvas rename as UiHierarchyNode
    data of how to translate parent size into our size
        ratio and pixel offset for top, left, bottom, right?
        or speify a pivot on parent and self, and sepcify size (as float ratio and int pisel offset)
        flag, use calculated size as max, and collapse to child required

    UiRenderTarget
    array of UiDraw/ array of UiHierarchyNode


given dag nod for screen size, (the parent size)
UIManager::Draw(DrawFrame, IRenderTarget (with size), UiHierarchyNode)

draw to back buffer vrs draw to render target? root hierarchy node? or node that takes an external render target

UIManager::Draw(draw frame, render target, geometry, texture)
UIManager::DrawHierarchy(draw frame, UiHierarchyNode)

UiHierarchyNode
    array children UiHierarchyNode
    UiTexture, render target for children or custom texture
    UiGeometry, geometry or null, top level may not need geometry
    rules to make geometry/ render target size based on parent size
    calculated size~ or authorative size is in UiTexture
    
    content may change, needing re-draw, size may change needing re draw...


how does text fit in? is UiGeometry part of the array children UiHierarchyNode


UiHierarchyNode
    array children <UiHierarchyNode, UiGeometry>
    UiTexture, render target for children to draw to, or texture
    rules to update size based on parent size, also uv
    // given max size, return needed size?

for text, it outputs to a UiTexture, and gets input from UiHierarchyNode size


i_ui_content
    UiContentImage
    UiContentText
    UiContentCanvas
    UiContentDock //grid/ or a canvas that doesn't allow overlap, 
    UiContentStack // so, what controls how children have positions generated
    // build scroll auto/manual into geometry ui calculation?
    //UiContentScrollAuto
    //UiContentScrollManual

    UiContentEffectDropShadow
    UiContentEffectStroke
    UiContentEffectHighlight // mouse over/ mouse down
    UiContentEffectShine

    UiContentMixMask //combine rgb from child 0 and use child 1 as a mask as alpha
    UiContentEffectRoundCorners // draws round corners in black

each content has an on click? on select sound? block mouse over/ navigation

ui scale effects font size and pixel portion of coords
ui coord have a ratio and a pixel size

canvas child position specified by 


i_ui_content
    void UpdateChildGeometry(out render target size4, out geometry pos4, out geometry uv4, in child)
    int2 CalculateNeededSize(max size2)

+ new game
> continue
i info
(gear) options
x exit

todo:
X application coord test, add two panels bottom right
- have a stack of text, the fps, build details, build time and version
- have a stack of buttons, mask out rounded corners and icon, drop shadow
- copy texture resource

longterm:
- split shader in shader_common and shader_instance, with shader instance having the memory handles of the constant buffer
- change GetShaderResourceHeapWrapperItem to true raw pointer, use raw ptr more often


i_ui_data
i_ui_data_server
    i_ui_data GetData(key)
// formatting hints by class name? or no layout in model
//ui_data_string_small_right_no_wrap_auto_scroll
ui_data_string
ui_data_container // array of ui_data
ui_data_icon_button // icon id (string), lable, enable flag, on click, on navigate?
ui_data_expander // string, 

translation_collection
    string GetDefaultLocale()
    vector<string> GetLocaleList(locale) // return array of keys? or array of pair<key,value>
    std::string GetValue(locale, key)
    void AppendData(locale, array<key, value>);
    void ClearData()




