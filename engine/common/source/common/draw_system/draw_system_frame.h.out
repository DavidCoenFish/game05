#include "common/draw_system/geometry/geometry.h"

#pragma once
class DrawSystem;
class IRenderTarget;
class Shader;
class GeometryGeneric;

class DrawSystemFrame
{
public::
    ~DrawSystemFrame();
    ID3D12GraphicsCommandList* GetCommandList();
    const int GetBackBufferIndex();
    void SetRenderTarget(IRenderTarget* const in_render_target);
    void SetShader(Shader* const in_shader);
    void Draw(GeometryGeneric* const in_geometry);
    void Dispatch(uint32_t numGroupsX, uint32_t numGroupsY = 1, uint32_t numGroupsZ = 1);
    template < typename TypeVertex > void Draw(Geometry < TypeVertex > * const in_geometry)
    {
        pGeometry -> Draw(_command_list);
    }


private::
    ID3D12GraphicsCommandList* _command_list;
    ID3D12CommandQueue* _command_queue;
    IRenderTarget* _render_target;

};
